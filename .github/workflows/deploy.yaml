#name: Build and Deploy to Docker Image
#on: push
#jobs:
#  kubernetes-cluster:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3.5.2
#      - name: "Set current date as env variable"
#        run: |
#          echo "builddate=$(date +'%Y-%m-%d-T-%H-%M')" >> $GITHUB_OUTPUT
#        id: version
#      - name: Push image and deploy
#        uses: observian/littleci-littlecd-eks@master
#        with:
#          access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          account_id: ${{ secrets.AWS_ACCOUNT_ID }}
#          repo: nextjs-application
#          region: eu-central-1
#          tags: ${{ steps.version.outputs.builddate }}
#          eks_cluster_name: EKS-Demo-Cluster
#          k8s_manifest: deployment1.yaml
#          k8s_image_tag: ${{ steps.version.outputs.builddate }}
#

name: Node js app deploy to EKS
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0'
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: nextjs-application
        IMAGE_TAG: latest
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Update kube config
      run: aws eks update-kubeconfig --name EKS-Demo-Cluster
    
    - name: Deploy to EKS
      run: |
        kubectl apply -f deployment1.yaml
        kubectl apply -f service1.yaml

#on: push
#name: deploy
#jobs:
#  deploy:
#    name: deploy to cluster
#    runs-on: ubuntu-latest
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2
#
#    - name: Configure AWS credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: eu-central-1
#    
#    - name: Login to Amazon ECR
#      id: login-ecr
#      uses: aws-actions/amazon-ecr-login@v1
#
#    - name: deploy to cluster
#      uses: kodermax/kubectl-aws-eks@master
#      env:
#        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_STAGING }}
#        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#        ECR_REPOSITORY: nextjs-application
#        IMAGE_TAG: ${{ github.sha }}
#      with:
#        args: set image deployment/$ECR_REPOSITORY $ECR_REPOSITORY=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#        
#    - name: verify deployment
#      uses: kodermax/kubectl-aws-eks@master
#      env:
#        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
#      with:
#        args: rollout status deployment/nextjs-application
#